{"code":"import { __assign } from \"tslib\";\r\nimport { AssetType } from \"../assets\";\r\nvar ScoreManager = /** @class */ (function () {\r\n    function ScoreManager(_scene) {\r\n        this._scene = _scene;\r\n        this.highScore = 0;\r\n        this.score = 0;\r\n        this._init();\r\n        this.print();\r\n    }\r\n    Object.defineProperty(ScoreManager.prototype, \"noMoreLives\", {\r\n        get: function () {\r\n            return this.lives.countActive(true) === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ScoreManager.prototype._init = function () {\r\n        var _a = this._scene.game.canvas, SIZE_X = _a.width, SIZE_Y = _a.height;\r\n        var textConfig = {\r\n            fontFamily: \"'Arial', sans-serif\",\r\n            fill: \"#ffffff\",\r\n        };\r\n        var normalTextConfig = __assign(__assign({}, textConfig), { fontSize: \"16px\" });\r\n        var bigTextConfig = __assign(__assign({}, textConfig), { fontSize: \"36px\" });\r\n        this._scene.add.text(16, 16, \"SCORE\", normalTextConfig);\r\n        this.scoreText = this._scene.add.text(22, 32, \"\", normalTextConfig);\r\n        this.line1Text = this._scene.add\r\n            .text(SIZE_X / 2, 320, \"\", bigTextConfig)\r\n            .setOrigin(0.5);\r\n        this.line2Text = this._scene.add\r\n            .text(SIZE_X / 2, 400, \"\", bigTextConfig)\r\n            .setOrigin(0.5);\r\n        this._setLivesText(SIZE_X, normalTextConfig);\r\n    };\r\n    ScoreManager.prototype._setLivesText = function (SIZE_X, textConfig) {\r\n        this._scene.add.text(SIZE_X - 100, 16, \"LIVES\", textConfig);\r\n        this.lives = this._scene.physics.add.group({\r\n            maxSize: 3,\r\n            runChildUpdate: true,\r\n        });\r\n        this.resetLives();\r\n    };\r\n    ScoreManager.prototype.resetLives = function () {\r\n        var SIZE_X = this._scene.game.canvas.width;\r\n        this.lives.clear(true, true);\r\n        for (var i = 0; i < 3; i++) {\r\n            var ship = this.lives.create(SIZE_X - 100 + 30 * i, 60, AssetType.Ship);\r\n            ship.setOrigin(0.5, 0.5);\r\n            ship.setAngle(90);\r\n            ship.setAlpha(0.6);\r\n        }\r\n    };\r\n    ScoreManager.prototype.setWinText = function () {\r\n        this._setBigText(\"YOU WON!\", \"PRESS SPACE FOR NEW GAME\");\r\n    };\r\n    ScoreManager.prototype.setGameOverText = function () {\r\n        this._setBigText(\"GAME OVER\", \"PRESS SPACE FOR NEW GAME\");\r\n    };\r\n    ScoreManager.prototype.hideText = function () {\r\n        this._setBigText(\"\", \"\");\r\n    };\r\n    ScoreManager.prototype._setBigText = function (line1, line2) {\r\n        this.line1Text.setText(line1);\r\n        this.line2Text.setText(line2);\r\n    };\r\n    ScoreManager.prototype.setHighScore = function () {\r\n        if (this.score > this.highScore) {\r\n            this.highScore = this.score;\r\n        }\r\n        this.score = 0;\r\n        this.print();\r\n    };\r\n    ScoreManager.prototype.print = function () {\r\n        this.scoreText.setText(\"\" + this.padding(this.score));\r\n    };\r\n    ScoreManager.prototype.increaseScore = function (step) {\r\n        if (step === void 0) { step = 10; }\r\n        this.score += step;\r\n        this.print();\r\n    };\r\n    ScoreManager.prototype.padding = function (num) {\r\n        return (\"\" + num).padStart(4, \"0\");\r\n    };\r\n    return ScoreManager;\r\n}());\r\nexport { ScoreManager };\r\n","references":["/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/assets.ts"]}
