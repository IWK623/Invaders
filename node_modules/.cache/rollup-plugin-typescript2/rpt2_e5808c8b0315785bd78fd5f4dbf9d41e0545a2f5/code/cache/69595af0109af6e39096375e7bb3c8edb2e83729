{"code":"import { __extends } from \"tslib\";\r\nimport { AssetType, SoundType } from \"../interface/assets\";\r\nimport { AssetManager } from \"../interface/manager/asset-manager\";\r\nimport { AlienManager } from \"../interface/manager/alien-manager\";\r\nimport { Ship } from \"../interface/ship\";\r\nimport { AnimationFactory, AnimationType, } from \"../interface/factory/animation-factory\";\r\nimport { ScoreManager } from \"../interface/manager/score-manager\";\r\nimport { GameState } from \"../interface/game-state\";\r\nvar MainScene = /** @class */ (function (_super) {\r\n    __extends(MainScene, _super);\r\n    function MainScene() {\r\n        var _this = _super.call(this, {\r\n            key: \"MainScene\",\r\n        }) || this;\r\n        _this.bulletTime = 0;\r\n        _this.firingTimer = 0;\r\n        return _this;\r\n    }\r\n    MainScene.prototype.preload = function () {\r\n        this.load.setBaseURL(\"/assets\");\r\n        this.load.image(AssetType.Starfield, \"dist/assets/images/starfield.png\");\r\n        this.load.image(AssetType.Bullet, \"dist/assets/images/bullet.png\");\r\n        this.load.image(AssetType.EnemyBullet, \"dist/assets/images/enemy-bullet.png\");\r\n        this.load.spritesheet(AssetType.Alien, \"dist/assets/images/invader.png\", {\r\n            frameWidth: 32,\r\n            frameHeight: 32,\r\n        });\r\n        this.load.image(AssetType.Ship, \"dist/assets/images/player.png\");\r\n        this.load.spritesheet(AssetType.Kaboom, \"dist/assets/images/explode.png\", {\r\n            frameWidth: 128,\r\n            frameHeight: 128,\r\n        });\r\n        this.sound.volume = 0.5;\r\n        this.load.audio(SoundType.Shoot, \"dist/assets/audio/shoot.wav\");\r\n        this.load.audio(SoundType.Kaboom, \"dist/assets/audio/explosion.wav\");\r\n        this.load.audio(SoundType.InvaderKilled, \"dist/assets/audio/invaderkilled.wav\");\r\n    };\r\n    MainScene.prototype.create = function () {\r\n        var _this = this;\r\n        this.state = GameState.Playing;\r\n        this.starfield = this.add\r\n            .tileSprite(0, 0, 800, 600, AssetType.Starfield)\r\n            .setOrigin(0, 0);\r\n        this.assetManager = new AssetManager(this);\r\n        this.animationFactory = new AnimationFactory(this);\r\n        this.cursors = this.input.keyboard.createCursorKeys();\r\n        this.fireKey = this.input.keyboard.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);\r\n        this.player = Ship.create(this);\r\n        this.alienManager = new AlienManager(this);\r\n        this.scoreManager = new ScoreManager(this);\r\n        this.fireKey.on(\"down\", function () {\r\n            switch (_this.state) {\r\n                case GameState.Win:\r\n                case GameState.GameOver:\r\n                    _this.restart();\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    MainScene.prototype.update = function () {\r\n        this.starfield.tilePositionY -= 1;\r\n        this._shipKeyboardHandler();\r\n        if (this.time.now > this.firingTimer) {\r\n            this._enemyFires();\r\n        }\r\n        this.physics.overlap(this.assetManager.bullets, this.alienManager.aliens, this._bulletHitAliens, null, this);\r\n        this.physics.overlap(this.assetManager.enemyBullets, this.player, this._enemyBulletHitPlayer, null, this);\r\n    };\r\n    MainScene.prototype._shipKeyboardHandler = function () {\r\n        var playerBody = this.player.body;\r\n        playerBody.setVelocity(0, 0);\r\n        if (this.cursors.left.isDown) {\r\n            playerBody.setVelocityX(-200);\r\n        }\r\n        else if (this.cursors.right.isDown) {\r\n            playerBody.setVelocityX(200);\r\n        }\r\n        if (this.fireKey.isDown) {\r\n            this._fireBullet();\r\n        }\r\n    };\r\n    MainScene.prototype._bulletHitAliens = function (bullet, alien) {\r\n        var explosion = this.assetManager.explosions.get();\r\n        bullet.kill();\r\n        alien.kill(explosion);\r\n        this.scoreManager.increaseScore();\r\n        if (!this.alienManager.hasAliveAliens) {\r\n            this.scoreManager.increaseScore(1000);\r\n            this.scoreManager.setWinText();\r\n            this.state = GameState.Win;\r\n        }\r\n    };\r\n    MainScene.prototype._enemyBulletHitPlayer = function (ship, enemyBullet) {\r\n        var explosion = this.assetManager.explosions.get();\r\n        enemyBullet.kill();\r\n        var live = this.scoreManager.lives.getFirstAlive();\r\n        if (live) {\r\n            live.setActive(false).setVisible(false);\r\n        }\r\n        explosion.setPosition(this.player.x, this.player.y);\r\n        explosion.play(AnimationType.Kaboom);\r\n        this.sound.play(SoundType.Kaboom);\r\n        if (this.scoreManager.noMoreLives) {\r\n            this.scoreManager.setGameOverText();\r\n            this.assetManager.gameOver();\r\n            this.state = GameState.GameOver;\r\n            this.player.disableBody(true, true);\r\n        }\r\n    };\r\n    MainScene.prototype._enemyFires = function () {\r\n        if (!this.player.active) {\r\n            return;\r\n        }\r\n        var enemyBullet = this.assetManager.enemyBullets.get();\r\n        var randomEnemy = this.alienManager.getRandomAliveEnemy();\r\n        if (enemyBullet && randomEnemy) {\r\n            enemyBullet.setPosition(randomEnemy.x, randomEnemy.y);\r\n            this.physics.moveToObject(enemyBullet, this.player, 120);\r\n            this.firingTimer = this.time.now + 2000;\r\n        }\r\n    };\r\n    MainScene.prototype._fireBullet = function () {\r\n        if (!this.player.active) {\r\n            return;\r\n        }\r\n        if (this.time.now > this.bulletTime) {\r\n            var bullet = this.assetManager.bullets.get();\r\n            if (bullet) {\r\n                bullet.shoot(this.player.x, this.player.y - 18);\r\n                this.bulletTime = this.time.now + 200;\r\n            }\r\n        }\r\n    };\r\n    MainScene.prototype.restart = function () {\r\n        this.state = GameState.Playing;\r\n        this.player.enableBody(true, this.player.x, this.player.y, true, true);\r\n        this.scoreManager.resetLives();\r\n        this.scoreManager.hideText();\r\n        this.alienManager.reset();\r\n        this.assetManager.reset();\r\n    };\r\n    return MainScene;\r\n}(Phaser.Scene));\r\nexport { MainScene };\r\n","references":["/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/assets.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/bullet.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/manager/asset-manager.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/manager/alien-manager.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/ship.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/factory/animation-factory.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/alien.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/kaboom.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/enemy-bullet.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/manager/score-manager.ts","/Users/keiiwami/Desktop/JavaScript Games/Invaders/src/interface/game-state.ts"]}
